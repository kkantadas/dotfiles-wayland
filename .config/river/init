##!/bin/sh
#
## This is the example configuration file for river.
##
## If you wish to edit this, you will probably want to copy it to
## $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
##
## See the river(1), riverctl(1), and rivertile(1) man pages for complete
## documentation.
#
## Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.
#
## Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
#riverctl map normal Super+Shift Return spawn foot
#
## Super+Q to close the focused view
#riverctl map normal Super Q close
#
## Super+Shift+E to exit river
#riverctl map normal Super+Shift E exit
#
## Super+J and Super+K to focus the next/previous view in the layout stack
#riverctl map normal Super J focus-view next
#riverctl map normal Super K focus-view previous
#
## Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
## view in the layout stack
#riverctl map normal Super+Shift J swap next
#riverctl map normal Super+Shift K swap previous
#
## Super+Period and Super+Comma to focus the next/previous output
#riverctl map normal Super Period focus-output next
#riverctl map normal Super Comma focus-output previous
#
## Super+Shift+{Period,Comma} to send the focused view to the next/previous output
#riverctl map normal Super+Shift Period send-to-output next
#riverctl map normal Super+Shift Comma send-to-output previous
#
## Super+Return to bump the focused view to the top of the layout stack
#riverctl map normal Super Return zoom
#
## Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
#riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
#riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"
#
## Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
#riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
#riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"
#
## Super+Alt+{H,J,K,L} to move views
#riverctl map normal Super+Alt H move left 100
#riverctl map normal Super+Alt J move down 100
#riverctl map normal Super+Alt K move up 100
#riverctl map normal Super+Alt L move right 100
#
## Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Super+Alt+Control H snap left
#riverctl map normal Super+Alt+Control J snap down
#riverctl map normal Super+Alt+Control K snap up
#riverctl map normal Super+Alt+Control L snap right
#
## Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100
#
## Super + Left Mouse Button to move views
#riverctl map-pointer normal Super BTN_LEFT move-view
#
## Super + Right Mouse Button to resize views
#riverctl map-pointer normal Super BTN_RIGHT resize-view
#
## Super + Middle Mouse Button to toggle float
#riverctl map-pointer normal Super BTN_MIDDLE toggle-float
#
#for i in $(seq 1 9)
#do
#    tags=$((1 << ($i - 1)))
#
#    # Super+[1-9] to focus tag [0-8]
#    riverctl map normal Super $i set-focused-tags $tags
#
#    # Super+Shift+[1-9] to tag focused view with tag [0-8]
#    riverctl map normal Super+Shift $i set-view-tags $tags
#
#    # Super+Control+[1-9] to toggle focus of tag [0-8]
#    riverctl map normal Super+Control $i toggle-focused-tags $tags
#
#    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
#    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
#done
#
## Super+0 to focus all tags
## Super+Shift+0 to tag focused view with all tags
#all_tags=$(((1 << 32) - 1))
#riverctl map normal Super 0 set-focused-tags $all_tags
#riverctl map normal Super+Shift 0 set-view-tags $all_tags
#
## Super+Space to toggle float
#riverctl map normal Super Space toggle-float
#
## Super+F to toggle fullscreen
#riverctl map normal Super F toggle-fullscreen
#
## Super+{Up,Right,Down,Left} to change layout orientation
#riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
#riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
#riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
#riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"
#
## Declare a passthrough mode. This mode has only a single mapping to return to
## normal mode. This makes it useful for testing a nested wayland compositor
#riverctl declare-mode passthrough
#
## Super+F11 to enter passthrough mode
#riverctl map normal Super F11 enter-mode passthrough
#
## Super+F11 to return to normal mode
#riverctl map passthrough Super F11 enter-mode normal
#
## Various media key mapping examples for both normal and locked mode which do
## not have a modifier
#for mode in normal locked
#do
#    # Eject the optical drive (well if you still have one that is)
#    riverctl map $mode None XF86Eject spawn 'eject -T'
#
#    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
#    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
#    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
#    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'
#
#    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
#    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
#    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
#    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
#    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'
#
#    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
#    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
#    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
#done
#
## Set background and border color
#riverctl background-color 0x002b36
#riverctl border-color-focused 0x93a1a1
#riverctl border-color-unfocused 0x586e75
#
## Set keyboard repeat rate
#riverctl set-repeat 50 300
#
## Make all views with an app-id that starts with "float" and title "foo" start floating.
#riverctl rule-add float -app-id 'float*' -title 'foo'
#
## Make all views with app-id "bar" and any title use client-side decorations
#riverctl rule-add csd -app-id "bar"
#
## Set the default layout generator to be rivertile and start it.
## River will send the process group of the init executable SIGTERM on exit.
#riverctl default-layout rivertile
#rivertile -view-padding 6 -outer-padding 6 &
#
#
##My keymaps
#
#riverctl map normal $mod W spawn "firefox"
#
##
##
##
##
##!/bin/sh
#
## This is the example configuration file for river.
##
## If you wish to edit this, you will probably want to copy it to
## $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
##
## See the river(1), riverctl(1), and rivertile(1) man pages for complete
## documentation.
#
## Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.
#
## Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
#riverctl map normal Super+Shift Return spawn foot
#
## Super+Q to close the focused view
#riverctl map normal Super Q close
#
## Super+Shift+E to exit river
#riverctl map normal Super+Shift E exit
#
## Super+J and Super+K to focus the next/previous view in the layout stack
#riverctl map normal Super J focus-view next
#riverctl map normal Super K focus-view previous
#
## Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
## view in the layout stack
#riverctl map normal Super+Shift J swap next
#riverctl map normal Super+Shift K swap previous
#
## Super+Period and Super+Comma to focus the next/previous output
#riverctl map normal Super Period focus-output next
#riverctl map normal Super Comma focus-output previous
#
## Super+Shift+{Period,Comma} to send the focused view to the next/previous output
#riverctl map normal Super+Shift Period send-to-output next
#riverctl map normal Super+Shift Comma send-to-output previous
#
## Super+Return to bump the focused view to the top of the layout stack
#riverctl map normal Super Return zoom
#
## Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
#riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
#riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"
#
## Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
#riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
#riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"
#
## Super+Alt+{H,J,K,L} to move views
#riverctl map normal Super+Alt H move left 100
#riverctl map normal Super+Alt J move down 100
#riverctl map normal Super+Alt K move up 100
#riverctl map normal Super+Alt L move right 100
#
## Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Super+Alt+Control H snap left
#riverctl map normal Super+Alt+Control J snap down
#riverctl map normal Super+Alt+Control K snap up
#riverctl map normal Super+Alt+Control L snap right
#
## Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100
#
## Super + Left Mouse Button to move views
#riverctl map-pointer normal Super BTN_LEFT move-view
#
## Super + Right Mouse Button to resize views
#riverctl map-pointer normal Super BTN_RIGHT resize-view
#
## Super + Middle Mouse Button to toggle float
#riverctl map-pointer normal Super BTN_MIDDLE toggle-float
#
#for i in $(seq 1 9)
#do
#    tags=$((1 << ($i - 1)))
#
#    # Super+[1-9] to focus tag [0-8]
#    riverctl map normal Super $i set-focused-tags $tags
#
#    # Super+Shift+[1-9] to tag focused view with tag [0-8]
#    riverctl map normal Super+Shift $i set-view-tags $tags
#
#    # Super+Control+[1-9] to toggle focus of tag [0-8]
#    riverctl map normal Super+Control $i toggle-focused-tags $tags
#
#    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
#    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
#done
#
## Super+0 to focus all tags
## Super+Shift+0 to tag focused view with all tags
#all_tags=$(((1 << 32) - 1))
#riverctl map normal Super 0 set-focused-tags $all_tags
#riverctl map normal Super+Shift 0 set-view-tags $all_tags
#
## Super+Space to toggle float
#riverctl map normal Super Space toggle-float
#
## Super+F to toggle fullscreen
#riverctl map normal Super F toggle-fullscreen
#
## Super+{Up,Right,Down,Left} to change layout orientation
#riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
#riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
#riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
#riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"
#
## Declare a passthrough mode. This mode has only a single mapping to return to
## normal mode. This makes it useful for testing a nested wayland compositor
#riverctl declare-mode passthrough
#
## Super+F11 to enter passthrough mode
#riverctl map normal Super F11 enter-mode passthrough
#
## Super+F11 to return to normal mode
#riverctl map passthrough Super F11 enter-mode normal
#
## Various media key mapping examples for both normal and locked mode which do
## not have a modifier
#for mode in normal locked
#do
#    # Eject the optical drive (well if you still have one that is)
#    riverctl map $mode None XF86Eject spawn 'eject -T'
#
#    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
#    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
#    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
#    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'
#
#    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
#    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
#    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
#    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
#    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'
#
#    # Control screen backlight brightness with light (https://github.com/haikarainen/light)
#    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
#    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
#done
#
## Set background and border color
#riverctl background-color 0x002b36
#riverctl border-color-focused 0x93a1a1
#riverctl border-color-unfocused 0x586e75
#
## Set keyboard repeat rate
#riverctl set-repeat 50 300
#
## Make all views with an app-id that starts with "float" and title "foo" start floating.
#riverctl rule-add float -app-id 'float*' -title 'foo'
#
## Make all views with app-id "bar" and any title use client-side decorations
#riverctl rule-add csd -app-id "bar"
#
## Set the default layout generator to be rivertile and start it.
## River will send the process group of the init executable SIGTERM on exit.
#riverctl default-layout rivertile
#rivertile -view-padding 6 -outer-padding 6 &






#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
# See the river(
# documentation.

# Note: the "$mod" modifier is also known as Logo, GUI, Windows, Mod4, etc.

mod="Mod4"
 
# set a wallpaper with swaybg
# rotate wallpaper with timing kill with > sudo kill -9 $(pidof bgchanger.sh)
riverctl spawn "cd ~/bin && ./bgchanger.sh"
riverctl spawn "i3bar-river"
riverctl spawn "foot --server <&-"
# $mod+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal $mod+Shift Return spawn "footclient" 
riverctl map normal $mod+Shift P  spawn "footclient & sleep .05 && riverctl toggle-float"
riverctl map normal $mod+Shift Z  spawn "systemctl suspend" 
#riverctl map normal $mod+Shift C  spawn "HeadphoneBlue.sh"

# $mod+Q to close the focused view
riverctl map normal $mod Q close
# $mod+Shift+E to exit river
riverctl map normal $mod+Shift E exit

# $mod+J and $mod+K to focus the next/previous view in the layout stack
riverctl map normal $mod J focus-view next
riverctl map normal $mod K focus-view previous

# $mod+Shift+J and $mod+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift J swap next
riverctl map normal $mod+Shift K swap previous

# $mod+Period and $mod+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# $mod+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# $mod+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod Return zoom

# $mod+H and $mod+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod L send-layout-cmd rivertile "main-ratio +0.05"

# $mod+Shift+H and $mod+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift L send-layout-cmd rivertile "main-count -1"

# $mod+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Alt H move left 100
riverctl map normal $mod+Alt J move down 100
riverctl map normal $mod+Alt K move up 100
riverctl map normal $mod+Alt L move right 100

# $mod+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Alt+Control H snap left
riverctl map normal $mod+Alt+Control J snap down
riverctl map normal $mod+Alt+Control K snap up
riverctl map normal $mod+Alt+Control L snap right

# $mod+Alt+Shif+{H,J,K,L} to resize views
riverctl map normal $mod+Alt+Shift H resize horizontal -100
riverctl map normal $mod+Alt+Shift J resize vertical 100
riverctl map normal $mod+Alt+Shift K resize vertical -100
riverctl map normal $mod+Alt+Shift L resize horizontal 100

# $mod + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# $mod + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # $mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # $mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # $mod+Ctrl+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # $mod+Shift+Ctrl+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# $mod+0 to focus all tags
# $mod+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

# $mod+Space to toggle float
riverctl map normal $mod Space toggle-float

# $mod+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# $mod+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left  send-layout-cmd rivertile "main-location left"

riverctl map normal $mod U spawn "qutebrowser"

riverctl map normal $mod X spawn "footclient -e ranger"
#riverctl map normal $mod X spawn "st -e ranger"

# bemenu-run as executing programs
#riverctl map normal $mod D spawn "bash ~/bin/riverWaydmenu.sh " 
riverctl map normal $mod D spawn bemenu-run --nb "000000" --nf "#dcdccc"  --fn terminus:18 -b -M 10 -p @

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# $mod+F11 to enter passthrough mode
riverctl map normal $mod F11 enter-mode passthrough

# $mod+F11 to return to normal mode
riverctl map passthrough $mod F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brighness with light (https://github.com/haikarainen/light)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'light -A 5'
    riverctl map $mode None XF86MonBrightnessDown spawn 'light -U 5'
done

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x4d5f66         #     0x93a1a1
riverctl border-color-unfocused 0x21292c       #     0x586e75
riverctl border-width 2

for pad in $(riverctl list-inputs | grep -i touchpad )
do
#  riverctl input $pad events enabled
  riverctl input $pad tap enabled
  riverctl input $pad disable-while-typing enabled
done

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make certain views start floating
riverctl float-filter-add app-id float
riverctl float-filter-add title "popup title with spaces"

# Set app-ids and titles of views which should use client side decorations
riverctl csd-filter-add app-id "firefox"
#riverctl csd-filter-add "firefox"

riverctl map normal Mod4 Up spawn "cycle-focused-tags previous 9"
riverctl map normal Mod4 Down spawn "cycle-focused-tags next 9"

#riverctl spawn "waybar -c ~/.config/waybar/river/config-river -s ~/.config/waybar/river/river_style.css & sleep 7s && killall waybar"
#riverctl spawn "waybar -c ~/.config/waybar/bar/config -s ~/.config/waybar/bar/style.css" 
riverctl map normal $mod Z spawn "killall -SIGUSR1 i3bar-river"

#--or---
#riverctl spawn i3bar-river
# Set and exec into the default layout generator, rivertile.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
#exec rivertile -view-padding 6 -outer-padding 6
exec rivertile -view-padding 3 -outer-padding 3
